name = "tests"

[namespace.service.new]
required = ["credential"]
optional = ["service_features", "default_service_pairs", "endpoint", "http_client_options"]

[namespace.service.op.create]
required = ["location"]

[namespace.service.op.delete]
optional = ["location"]

[namespace.service.op.get]
optional = ["location"]

[namespace.service.op.list]
optional = ["location"]

[namespace.storage]
features = ["virtual_dir", "loose_pair"]
implement = ["copier", "fetcher", "mover", "multiparter", "reacher", "appender"]

[namespace.storage.new]
required = ["name"]
optional = ["storage_features", "default_storage_pairs", "disable_uri_cleaning", "http_client_options", "location", "work_dir"]

[namespace.storage.op.delete]
optional = ["multipart_id", "object_mode"]

[namespace.storage.op.list]
optional = ["list_mode"]

[namespace.storage.op.reach]
required = ["expire"]

[namespace.storage.op.read]
optional = ["io_callback", "size", "offset"]

[namespace.storage.op.create]
optional = ["object_mode"]

[namespace.storage.op.stat]
optional = ["object_mode"]

[namespace.storage.op.write]
optional = ["content_md5", "content_type", "io_callback", "storage_class"]

[pairs.disable_uri_cleaning]
type = "bool"

[pairs.storage_class]
type = "string"
defaultable = true

[pairs.default_service_pairs]
type = "DefaultServicePairs"
description = "set default pairs for service actions"

[pairs.default_storage_pairs]
type = "DefaultStoragePairs"
description = "set default pairs for storager actions"

[pairs.service_features]
type = "ServiceFeatures"
description = "set service features"

[pairs.storage_features]
type = "StorageFeatures"
description = "set storage features"

[infos.object.meta.storage-class]
type = "string"
description = "is the storage class for this object"

[infos.storage.meta.queries-per-second]
type = "int64"
description = "tests storage system metadata"

[pairs.string_pair]
type = "string"
description = "tests connection string"
